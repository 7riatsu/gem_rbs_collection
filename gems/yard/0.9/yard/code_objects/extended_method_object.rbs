class YARD::CodeObjects::ExtendedMethodObject
  # @return [Symbol] always +:class+
  def scope: () -> Symbol
  # Sets up a delegate for {MethodObject} obj.
  #
  # @param [MethodObject] obj the instance method to treat as a mixed in
  #   class method on another namespace.
  def initialize: (YARD::CodeObjects::MethodObject obj) -> void
  # Sends all methods to the {MethodObject} assigned in {#initialize}
  # @see #initialize
  # @see MethodObject
  def method_missing: (untyped sym, *untyped args) -> untyped
end
