module LaunchDarkly
  module Impl
    module Model
      class FeatureFlag
        # @param data [Hash]
        # @param logger [Logger|nil]
        def initialize: (untyped data, ?untyped? logger) -> void

        # @return [Hash]
        attr_reader data: untyped

        # @return [String]
        attr_reader key: untyped

        # @return [Integer]
        attr_reader version: untyped

        # @return [Boolean]
        attr_reader deleted: untyped

        # @return [Array]
        attr_reader variations: untyped

        # @return [Boolean]
        attr_reader on: untyped

        # @return [Integer|nil]
        attr_reader off_variation: untyped

        # @return [LaunchDarkly::Impl::Model::VariationOrRollout]
        attr_reader fallthrough: untyped

        # @return [LaunchDarkly::EvaluationDetail]
        attr_reader off_result: untyped

        # @return [LaunchDarkly::Impl::Model::EvalResultFactoryMultiVariations]
        attr_reader fallthrough_results: untyped

        # @return [Array<LaunchDarkly::Impl::Model::Prerequisite>]
        attr_reader prerequisites: untyped

        # @return [Array<LaunchDarkly::Impl::Model::Target>]
        attr_reader targets: untyped

        # @return [Array<LaunchDarkly::Impl::Model::Target>]
        attr_reader context_targets: untyped

        # @return [Array<LaunchDarkly::Impl::Model::FlagRule>]
        attr_reader rules: untyped

        # @return [String]
        attr_reader salt: untyped

        # This method allows us to read properties of the object as if it's just a hash. Currently this is
        # necessary because some data store logic is still written to expect hashes; we can remove it once
        # we migrate entirely to using attributes of the class.
        def []: (untyped key) -> untyped

        def ==: (untyped other) -> untyped

        def as_json: (*untyped) -> untyped

        # Same as as_json, but converts the JSON structure into a string.
        def to_json: (*untyped a) -> untyped
      end

      class Prerequisite
        def initialize: (untyped data, untyped flag, ?untyped? errors_out) -> void

        # @return [Hash]
        attr_reader data: untyped

        # @return [String]
        attr_reader key: untyped

        # @return [Integer]
        attr_reader variation: untyped

        # @return [LaunchDarkly::EvaluationDetail]
        attr_reader failure_result: untyped
      end

      class Target
        def initialize: (untyped data, untyped flag, ?untyped? errors_out) -> void

        # @return [String]
        attr_reader kind: untyped

        # @return [Hash]
        attr_reader data: untyped

        # @return [Set]
        attr_reader values: untyped

        # @return [Integer]
        attr_reader variation: untyped

        # @return [LaunchDarkly::EvaluationDetail]
        attr_reader match_result: untyped
      end

      class FlagRule
        def initialize: (untyped data, untyped rule_index, untyped flag, ?untyped? errors_out) -> void

        # @return [Hash]
        attr_reader data: untyped

        # @return [Array<LaunchDarkly::Impl::Model::Clause>]
        attr_reader clauses: untyped

        # @return [LaunchDarkly::Impl::Model::EvalResultFactoryMultiVariations]
        attr_reader match_results: untyped

        # @return [LaunchDarkly::Impl::Model::VariationOrRollout]
        attr_reader variation_or_rollout: untyped
      end

      class VariationOrRollout
        def initialize: (untyped variation, untyped rollout_data, ?untyped? flag, ?untyped? errors_out, ?untyped? description) -> void

        # @return [Integer|nil]
        attr_reader variation: untyped

        # @return [Rollout|nil] currently we do not have a model class for the rollout
        attr_reader rollout: untyped
      end

      class Rollout
        def initialize: (untyped data, ?untyped? flag, ?untyped? errors_out, ?untyped? description) -> void

        # @return [String|nil]
        attr_reader context_kind: untyped

        # @return [Array<WeightedVariation>]
        attr_reader variations: untyped

        # @return [String|nil]
        attr_reader bucket_by: untyped

        # @return [String|nil]
        attr_reader kind: untyped

        # @return [Boolean]
        attr_reader is_experiment: untyped

        # @return [Integer|nil]
        attr_reader seed: untyped
      end

      class WeightedVariation
        def initialize: (untyped data, ?untyped? flag, ?untyped? errors_out, ?untyped? description) -> void

        # @return [Integer]
        attr_reader variation: untyped

        # @return [Integer]
        attr_reader weight: untyped

        # @return [Boolean]
        attr_reader untracked: untyped
      end
    end
  end
end

class Object
  def check_variation_range: (untyped flag, untyped errors_out, untyped variation, untyped description) -> (untyped | nil | nil)
end
