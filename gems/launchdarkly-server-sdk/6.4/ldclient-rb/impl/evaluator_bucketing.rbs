module LaunchDarkly
  module Impl
    # Encapsulates the logic for percentage rollouts.
    module EvaluatorBucketing
      # Applies either a fixed variation or a rollout for a rule (or the fallthrough rule).
      #
      # @param flag [Object] the feature flag
      # @param rule [Object] the rule
      # @param user [Object] the user properties
      # @return [Number] the variation index, or nil if there is an error
      def self.variation_index_for_user: (untyped flag, untyped rule, untyped user) -> untyped

      # Returns a user's bucket value as a floating-point value in `[0, 1)`.
      #
      # @param user [Object] the user properties
      # @param key [String] the feature flag key (or segment key, if this is for a segment rule)
      # @param bucket_by [String|Symbol] the name of the user attribute to be used for bucketing
      # @param salt [String] the feature flag's or segment's salt value
      # @return [Number] the bucket value, from 0 inclusive to 1 exclusive
      def self.bucket_user: (untyped user, untyped key, untyped bucket_by, untyped salt, untyped seed) -> (nil | ::Float | untyped)

      private

      def self.bucketable_string_value: (untyped value) -> (untyped | nil)
    end
  end
end
